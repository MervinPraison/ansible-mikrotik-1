---

- name: execute MikroTik CLI command
  hosts: mikrotik_routers
  gather_facts: no
  connection: local

  vars:
    test_key: test-id_rsa
    test_vault: test-vault.yml
    test_vpf: test-password
    test_password: test

  tasks:
  - block:
  
    - name: create vault password file
      shell: 'echo {{ test_password }} > {{ test_vpf }}'
      args:
        creates: '{{ test_vpf }}'

    - name: adjust vault password file permissions
      file:
        path: '{{ test_vpf }}'
        mode: 0600
    
    - name: generate test ssh keys
      shell: "ssh-keygen -qf {{ test_key }} -t rsa -N '' -C test_key"
      args:
        creates: '{{ test_key }}'
    
    - name: test if pwgen is installed
      command: which pwgen
  
    - name: create and encrypt the test vault
      shell: |
        echo "admin_password: $(pwgen -H {{ test_key }} -s 10 1)" >>{{ test_vault }} &&
        ansible-vault encrypt --vault-password-file={{ test_vpf }} {{ test_vault }}
      args:
        creates: '{{ test_vault }}'

    run_once: yes

#  - pause:

  - name: gather facts from routers
    mikrotik_facts:
      hostname: "{{ inventory_hostname }}"
      username: admin
      key_filename: "{{ test_key }}"
    register: mikrotik

  - debug:
      var: mikrotik.user_ssh_keys
    when: (mikrotik.user_ssh_keys is not defined) or
          ("'test_key' not in mikrotik.user_ssh_keys")
